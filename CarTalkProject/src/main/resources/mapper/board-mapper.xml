<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.spring.board.model.mapper.BoardMapper">
	
	<sql id="boardColumns">
		SELECT
		       BOARD_NO boardNo
		     , CATEGORY_NAME category
		     , NICKNAME boardWriter
		     , BOARD_TITLE boardTitle
		     , BOARD_CONTENT boardContent
		     , VIEW_COUNT viewCount
		     , CT_BOARD.ENROLL_DATE enrollDate
		     , (SELECT 
		               COUNT(*)
		          FROM
		               CT_BOARD_LIKE 
		         WHERE
		               CT_BOARD_LIKE.BOARD_NO = CT_BOARD.BOARD_NO) AS likes
		  FROM
		       CT_BOARD
		  JOIN
		       CT_MEMBER USING (USER_NO)
		  JOIN
		       CT_BOARD_CATEGORY USING (CATEGORY_NO)
		 WHERE
		       STATUS = 'Y'
	</sql>
	
	<sql id="boardCount">
		SELECT
			   COUNT(*)
		  FROM
		       CT_BOARD
		  JOIN
		       CT_MEMBER USING (USER_NO)
		 WHERE
		       STATUS = 'Y'
	</sql>
	
	
	<select id="selectBoardCount"
			resultType="_int" parameterType="hashmap">
		<include refid="boardCount"/>		
		<if test="category != 0">
		   AND 
		       CATEGORY_NO = #{category}
		 </if>
	</select>
	
	<select id="selectBoardList" resultType="com.kh.spring.board.model.dto.BoardDTO" parameterType="hashmap">
		<include refid="boardColumns"></include>
		 <if test="category != 0">
		   AND 
		       CATEGORY_NO = #{category}
		 </if>
		 ORDER
		    BY
		       <choose>
		        <when test="orderBy == 'likes'">
		         likes DESC
		        </when>
		        <when test="orderBy == 'boardTitle'">
		         boardTitle ASC
		        </when>
		        <when test="orderBy == 'viewCount'">
		         viewCount DESC
		        </when>
		        <when test="orderBy == 'boardWriter'">
		         boardWriter ASC
		        </when>
		        <when test="orderBy == 'boardNo'" >
		         boardNo DESC
		        </when>
		       	<otherwise>
		       	 enrollDate DESC 
		       	</otherwise>
		       </choose>
	</select>
	
	<select id="selectBoardCountByKeyword"
			resultType="_int" parameterType="hashmap">
		<include refid="boardCount"/>
		<if test="category != 0">
		   AND 
		       CATEGORY_NO = #{category}
		 </if>
		   AND
		   <choose>
			<when test ="condition == 'title'">
		 	   BOARD_TITLE
		 	</when>
		 	<when test="condition == 'content'">
		 	   BOARD_CONTENT
		 	</when>
		 	<otherwise>
		 	   NICKNAME
		 	</otherwise>
		 	</choose>
		   	   LIKE '%' || #{keyword} || '%'
	</select>
	
	<select id="selectBoardListByKeyword" resultType="com.kh.spring.board.model.dto.BoardDTO" parameterType="hashmap">
		<include refid="boardColumns" />
		 <if test="category != 0">
		   AND 
		       CATEGORY_NO = #{category}
		 </if>
		   AND
		 <choose>
		 	<when test ="condition == 'title'">
		 	   BOARD_TITLE 
		 	</when>
		 	<when test="condition == 'content'">
		 	   BOARD_CONTENT
		 	</when>
		 	<otherwise>
		 	   NICKNAME
		 	</otherwise>
		 </choose>
		       LIKE '%' || #{keyword} || '%'
		 ORDER
		    BY
		       <choose>
		        <when test="orderBy == 'likes'">
		         likes DESC
		        </when>
		        <when test="orderBy == 'boardTitle'">
		         boardTitle ASC
		        </when>
		        <when test="orderBy == 'viewCount'">
		         viewCount DESC
		        </when>
		        <when test="orderBy == 'boardWriter'">
		         boardWriter ASC
		        </when>
		        <when test="orderBy == 'boardNo'" >
		         boardNo DESC
		        </when>
		       	<otherwise>
		       	 enrollDate DESC 
		       	</otherwise>
		       </choose>
	</select>
	
	
	<update id="increaseBoardCount" parameterType="long">
		UPDATE
		       CT_BOARD
		   SET
		       VIEW_COUNT = VIEW_COUNT + 1
		 WHERE
		       BOARD_NO = #{boardNo}
		   AND
		       STATUS = 'Y'
	</update>
	
	
	<resultMap type="com.kh.spring.board.model.dto.BoardDTO" id="selectBoardResult">
		<id column="boardNo" property="boardNo"/>
		<result column="boardTitle" property="boardTitle"/>
		<result column="boardContent" property="boardContent"/>
		<result column="boardWriter" property="boardWriter"/>
		<result column="viewCount" property="viewCount"/>
		<result column="category" property="category"/>
		<result column="boardEnrollDate" property="enrollDate"/>
		<result column="likes" property="likes"/>
		<association property="attachment" javaType="com.kh.spring.board.model.dto.AttachmentDTO">
			<result column="originName" property="originName"/>
			<result column="changeName" property="changeName"/>
			<result column="filePath" property="filePath"/>
		</association>
		<collection property="replies" ofType="com.kh.spring.board.model.dto.ReplyDTO">
			<id column="replyNo" property="replyNo"/>
			<result column="replyContent" property="replyContent"/>
			<result column="replyWriter" property="replyWriter"/>
			<result column="replyEnrollDate" property="enrollDate"/>
		</collection>
	</resultMap>
	  
	  
	<select id="selectByBoardNo" parameterType="long" resultMap="selectBoardResult">
	SELECT
	       CT_BOARD.BOARD_NO boardNo
	     , BOARD_TITLE boardTitle
	     , BOARD_CONTENT boardContent
	     , BOARDMEMBER.NICKNAME boardWriter
	     , VIEW_COUNT viewCount
	     , CATEGORY_NAME category
	     , CT_BOARD.ENROLL_DATE boardEnrollDate
	     , ORIGIN_NAME originName
	     , CHANGE_NAME changeName
	     , FILE_PATH filePath
	     , REPLY_NO replyNo
	     , REPLY_CONTENT replyContent
	     , REPLYMEMBER.NICKNAME replyWriter
	     , CT_BOARD_REPLY.ENROLL_DATE replyEnrollDate
	     , (SELECT 
	               COUNT(*)
	     	  FROM
	     	       CT_BOARD_LIKE
	     	 WHERE
	     	       CT_BOARD.BOARD_NO = CT_BOARD_LIKE.BOARD_NO) AS LIKES
	  FROM
	       CT_BOARD
	  JOIN
	       CT_BOARD_CATEGORY USING (CATEGORY_NO)
	  JOIN
	       CT_MEMBER BOARDMEMBER USING (USER_NO)
	  LEFT
	  JOIN
	       CT_BOARD_ATTACHMENT ON (BOARD_NO = REF_BNO) 
	  LEFT
	  JOIN 
	       CT_BOARD_REPLY ON (CT_BOARD.BOARD_NO = CT_BOARD_REPLY.BOARD_NO)
	  LEFT
	  JOIN
	       CT_MEMBER REPLYMEMBER ON (REPLYMEMBER.USER_NO = CT_BOARD_REPLY.USER_NO)
	 WHERE
	       CT_BOARD.STATUS = 'Y'
	   AND
	       CT_BOARD.BOARD_NO = #{boardNo}
	
	</select>
	<!-- 댓글 작성자로 참조할 외래키 값이 USER_NO(NUMBER)라서 댓글 작성자의 NICKNAME 값을 따로 출력해 주기 위해
		 CT_MEMBER를 한번 더 조인   -->

</mapper>